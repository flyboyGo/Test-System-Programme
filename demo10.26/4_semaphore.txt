头文件：#include <semaphore.h>
函数：
      int sem_init(sem_t *sem, int pshared,unsigned int value);
功能：
     创建一个信号量并初始化它的值。
参数：
     sem：信号量的地址。
     pshared：等于 0，信号量在线程间共享；不等于 0，信号量在进程间共享。
     value：信号量的初始值。
返回值：
      成功返回 0，失败返回-1。



头文件：
       #include <semaphore.h>
函数：
      int sem_wait(sem_t *sem);
功能：
      将信号量的值减 1，若信号量的值小于等于 0，此函数会引起调用者阻塞。
参数：
      sem：信号量地址。
返回值：
       成功返回 0，失败返回-1。

头文件：
      #include <semaphore.h> 
函数：
     int t sem_trywait(sem_t  *sem);
功能：
     将信号量的值减 1，若信号量的值小于等于 0，则对信号量的操作失败，函数立即返回。
参数：
       sem：信号量地址。
返回值：
       成功返回 0，失败返回-1。



头文件：
       #include <semaphore.h>
函数：
       int t sem_post(sem_t  *sem);
功能：
       将信号量的值加 1 并发出信号唤醒等待线程。
参数：
       sem：信号量地址。
返回值：
       成功返回 0，失败返回-1。



头文件：
       #include <semaphore.h>
函数：
       int sem_getvalue(sem_t *sem, int *sval);
功能：
       获取 sem 标识的信号量的值，保存在 sval 中。
参数：
       sem：信号量地址。
       sval：保存信号量值的地址。
返回值：
       成功返回 0，失败返回-1。



头文件：
       #include <semaphore.h>
函数：
       int t sem_destroy(sem_t  *sem);
功能：
       删除 sem 标识的信号量。
参数：
       sem：信号量地址。
返回值：
       成功返回 0，失败返回-1。